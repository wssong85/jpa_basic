//buildscript {
//    dependencies {
//        classpath('gradle.plugin.com.ewerk.gradle.pluins:querydsl-plugin:1.0.10')
//    }
//}

plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id 'java'
}

apply plugin: 'com.ewerk.gradle.plugins.querydsl'

group = 'com.jpabook'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok:1.18.20'

    // hibernate =>  entity 직접 노출 필요할 시
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // junit5가 default 이나, junit4로 일단 진행
    implementation 'junit:junit:4.13.1'
    // jpa log
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // swagger
//    implementation 'org.springframework.boot:spring-boot-starter-hateoas:2.4.3'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
//    implementation 'io.springfox:springfox-swagger2:2.9.2'

//    implementation 'jakarta.annotation:jakarta.annotation-api'

    // jpa
    implementation 'jakarta.annotation:jakarta.annotation-api'
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-apt'
}

//def querydslDir = 'src/main/generated'
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    library = 'com.querydsl:querydsl-apt'
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

//sourceSets {
//    main {
//        java {
//            srcDirs = ['src/main/java', querydslDir]
//        }
//    }
//}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

tasks.named('test') {
    useJUnitPlatform()
}
